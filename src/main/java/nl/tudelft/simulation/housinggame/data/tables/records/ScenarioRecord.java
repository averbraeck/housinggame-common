/*
 * This file is generated by jOOQ.
 */
package nl.tudelft.simulation.housinggame.data.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;

import nl.tudelft.simulation.housinggame.data.tables.Scenario;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScenarioRecord extends UpdatableRecordImpl<ScenarioRecord> implements Record9<Integer, String, Integer, Integer, Integer, Integer, Integer, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>housinggame.scenario.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>housinggame.scenario.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>housinggame.scenario.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>housinggame.scenario.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>housinggame.scenario.information_amount</code>.
     */
    public void setInformationAmount(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>housinggame.scenario.information_amount</code>.
     */
    public Integer getInformationAmount() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>housinggame.scenario.minimum_players</code>.
     */
    public void setMinimumPlayers(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>housinggame.scenario.minimum_players</code>.
     */
    public Integer getMinimumPlayers() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>housinggame.scenario.maximum_players</code>.
     */
    public void setMaximumPlayers(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>housinggame.scenario.maximum_players</code>.
     */
    public Integer getMaximumPlayers() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>housinggame.scenario.highest_round_number</code>.
     */
    public void setHighestRoundNumber(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>housinggame.scenario.highest_round_number</code>.
     */
    public Integer getHighestRoundNumber() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>housinggame.scenario.scenarioparameters_id</code>.
     */
    public void setScenarioparametersId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>housinggame.scenario.scenarioparameters_id</code>.
     */
    public Integer getScenarioparametersId() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>housinggame.scenario.gameversion_id</code>.
     */
    public void setGameversionId(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>housinggame.scenario.gameversion_id</code>.
     */
    public Integer getGameversionId() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>housinggame.scenario.description</code>.
     */
    public void setDescription(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>housinggame.scenario.description</code>.
     */
    public String getDescription() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, String, Integer, Integer, Integer, Integer, Integer, Integer, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, String, Integer, Integer, Integer, Integer, Integer, Integer, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Scenario.SCENARIO.ID;
    }

    @Override
    public Field<String> field2() {
        return Scenario.SCENARIO.NAME;
    }

    @Override
    public Field<Integer> field3() {
        return Scenario.SCENARIO.INFORMATION_AMOUNT;
    }

    @Override
    public Field<Integer> field4() {
        return Scenario.SCENARIO.MINIMUM_PLAYERS;
    }

    @Override
    public Field<Integer> field5() {
        return Scenario.SCENARIO.MAXIMUM_PLAYERS;
    }

    @Override
    public Field<Integer> field6() {
        return Scenario.SCENARIO.HIGHEST_ROUND_NUMBER;
    }

    @Override
    public Field<Integer> field7() {
        return Scenario.SCENARIO.SCENARIOPARAMETERS_ID;
    }

    @Override
    public Field<Integer> field8() {
        return Scenario.SCENARIO.GAMEVERSION_ID;
    }

    @Override
    public Field<String> field9() {
        return Scenario.SCENARIO.DESCRIPTION;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer component3() {
        return getInformationAmount();
    }

    @Override
    public Integer component4() {
        return getMinimumPlayers();
    }

    @Override
    public Integer component5() {
        return getMaximumPlayers();
    }

    @Override
    public Integer component6() {
        return getHighestRoundNumber();
    }

    @Override
    public Integer component7() {
        return getScenarioparametersId();
    }

    @Override
    public Integer component8() {
        return getGameversionId();
    }

    @Override
    public String component9() {
        return getDescription();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Integer value3() {
        return getInformationAmount();
    }

    @Override
    public Integer value4() {
        return getMinimumPlayers();
    }

    @Override
    public Integer value5() {
        return getMaximumPlayers();
    }

    @Override
    public Integer value6() {
        return getHighestRoundNumber();
    }

    @Override
    public Integer value7() {
        return getScenarioparametersId();
    }

    @Override
    public Integer value8() {
        return getGameversionId();
    }

    @Override
    public String value9() {
        return getDescription();
    }

    @Override
    public ScenarioRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ScenarioRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public ScenarioRecord value3(Integer value) {
        setInformationAmount(value);
        return this;
    }

    @Override
    public ScenarioRecord value4(Integer value) {
        setMinimumPlayers(value);
        return this;
    }

    @Override
    public ScenarioRecord value5(Integer value) {
        setMaximumPlayers(value);
        return this;
    }

    @Override
    public ScenarioRecord value6(Integer value) {
        setHighestRoundNumber(value);
        return this;
    }

    @Override
    public ScenarioRecord value7(Integer value) {
        setScenarioparametersId(value);
        return this;
    }

    @Override
    public ScenarioRecord value8(Integer value) {
        setGameversionId(value);
        return this;
    }

    @Override
    public ScenarioRecord value9(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public ScenarioRecord values(Integer value1, String value2, Integer value3, Integer value4, Integer value5, Integer value6, Integer value7, Integer value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ScenarioRecord
     */
    public ScenarioRecord() {
        super(Scenario.SCENARIO);
    }

    /**
     * Create a detached, initialised ScenarioRecord
     */
    public ScenarioRecord(Integer id, String name, Integer informationAmount, Integer minimumPlayers, Integer maximumPlayers, Integer highestRoundNumber, Integer scenarioparametersId, Integer gameversionId, String description) {
        super(Scenario.SCENARIO);

        setId(id);
        setName(name);
        setInformationAmount(informationAmount);
        setMinimumPlayers(minimumPlayers);
        setMaximumPlayers(maximumPlayers);
        setHighestRoundNumber(highestRoundNumber);
        setScenarioparametersId(scenarioparametersId);
        setGameversionId(gameversionId);
        setDescription(description);
        resetChangedOnNotNull();
    }
}
