/*
 * This file is generated by jOOQ.
 */
package nl.tudelft.simulation.housinggame.data.tables.records;


import nl.tudelft.simulation.housinggame.data.tables.Questionscore;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuestionscoreRecord extends UpdatableRecordImpl<QuestionscoreRecord> implements Record5<Integer, String, Byte, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>housinggame.questionscore.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>housinggame.questionscore.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>housinggame.questionscore.answer</code>.
     */
    public void setAnswer(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>housinggame.questionscore.answer</code>.
     */
    public String getAnswer() {
        return (String) get(1);
    }

    /**
     * Setter for <code>housinggame.questionscore.late_answer</code>.
     */
    public void setLateAnswer(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>housinggame.questionscore.late_answer</code>.
     */
    public Byte getLateAnswer() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>housinggame.questionscore.playerround_id</code>.
     */
    public void setPlayerroundId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>housinggame.questionscore.playerround_id</code>.
     */
    public Integer getPlayerroundId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>housinggame.questionscore.question_id</code>.
     */
    public void setQuestionId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>housinggame.questionscore.question_id</code>.
     */
    public Integer getQuestionId() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, Byte, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, Byte, Integer, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Questionscore.QUESTIONSCORE.ID;
    }

    @Override
    public Field<String> field2() {
        return Questionscore.QUESTIONSCORE.ANSWER;
    }

    @Override
    public Field<Byte> field3() {
        return Questionscore.QUESTIONSCORE.LATE_ANSWER;
    }

    @Override
    public Field<Integer> field4() {
        return Questionscore.QUESTIONSCORE.PLAYERROUND_ID;
    }

    @Override
    public Field<Integer> field5() {
        return Questionscore.QUESTIONSCORE.QUESTION_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getAnswer();
    }

    @Override
    public Byte component3() {
        return getLateAnswer();
    }

    @Override
    public Integer component4() {
        return getPlayerroundId();
    }

    @Override
    public Integer component5() {
        return getQuestionId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getAnswer();
    }

    @Override
    public Byte value3() {
        return getLateAnswer();
    }

    @Override
    public Integer value4() {
        return getPlayerroundId();
    }

    @Override
    public Integer value5() {
        return getQuestionId();
    }

    @Override
    public QuestionscoreRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public QuestionscoreRecord value2(String value) {
        setAnswer(value);
        return this;
    }

    @Override
    public QuestionscoreRecord value3(Byte value) {
        setLateAnswer(value);
        return this;
    }

    @Override
    public QuestionscoreRecord value4(Integer value) {
        setPlayerroundId(value);
        return this;
    }

    @Override
    public QuestionscoreRecord value5(Integer value) {
        setQuestionId(value);
        return this;
    }

    @Override
    public QuestionscoreRecord values(Integer value1, String value2, Byte value3, Integer value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QuestionscoreRecord
     */
    public QuestionscoreRecord() {
        super(Questionscore.QUESTIONSCORE);
    }

    /**
     * Create a detached, initialised QuestionscoreRecord
     */
    public QuestionscoreRecord(Integer id, String answer, Byte lateAnswer, Integer playerroundId, Integer questionId) {
        super(Questionscore.QUESTIONSCORE);

        setId(id);
        setAnswer(answer);
        setLateAnswer(lateAnswer);
        setPlayerroundId(playerroundId);
        setQuestionId(questionId);
        resetChangedOnNotNull();
    }
}
