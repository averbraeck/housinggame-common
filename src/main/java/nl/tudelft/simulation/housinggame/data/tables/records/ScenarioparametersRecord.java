/*
 * This file is generated by jOOQ.
 */
package nl.tudelft.simulation.housinggame.data.tables.records;


import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import nl.tudelft.simulation.housinggame.data.tables.Scenarioparameters;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScenarioparametersRecord extends UpdatableRecordImpl<ScenarioparametersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>housinggame.scenarioparameters.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>housinggame.scenarioparameters.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>housinggame.scenarioparameters.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>housinggame.scenarioparameters.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.pluvial_repair_costs_per_damage_point</code>.
     */
    public void setPluvialRepairCostsPerDamagePoint(Integer value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.pluvial_repair_costs_per_damage_point</code>.
     */
    public Integer getPluvialRepairCostsPerDamagePoint() {
        return (Integer) get(2);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.fluvial_repair_costs_per_damage_point</code>.
     */
    public void setFluvialRepairCostsPerDamagePoint(Integer value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.fluvial_repair_costs_per_damage_point</code>.
     */
    public Integer getFluvialRepairCostsPerDamagePoint() {
        return (Integer) get(3);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.pluvial_satisfaction_penalty_if_area_flooded</code>.
     */
    public void setPluvialSatisfactionPenaltyIfAreaFlooded(Integer value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.pluvial_satisfaction_penalty_if_area_flooded</code>.
     */
    public Integer getPluvialSatisfactionPenaltyIfAreaFlooded() {
        return (Integer) get(4);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.pluvial_repair_costs_fixed</code>.
     */
    public void setPluvialRepairCostsFixed(Integer value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.pluvial_repair_costs_fixed</code>.
     */
    public Integer getPluvialRepairCostsFixed() {
        return (Integer) get(5);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.fluvial_repair_costs_fixed</code>.
     */
    public void setFluvialRepairCostsFixed(Integer value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.fluvial_repair_costs_fixed</code>.
     */
    public Integer getFluvialRepairCostsFixed() {
        return (Integer) get(6);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.fluvial_satisfaction_penalty_if_area_flooded</code>.
     */
    public void setFluvialSatisfactionPenaltyIfAreaFlooded(Integer value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.fluvial_satisfaction_penalty_if_area_flooded</code>.
     */
    public Integer getFluvialSatisfactionPenaltyIfAreaFlooded() {
        return (Integer) get(7);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.pluvial_satisfaction_penalty_house_flooded_fixed</code>.
     */
    public void setPluvialSatisfactionPenaltyHouseFloodedFixed(Integer value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.pluvial_satisfaction_penalty_house_flooded_fixed</code>.
     */
    public Integer getPluvialSatisfactionPenaltyHouseFloodedFixed() {
        return (Integer) get(8);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.fluvial_satisfaction_penalty_house_flooded_fixed</code>.
     */
    public void setFluvialSatisfactionPenaltyHouseFloodedFixed(Integer value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.fluvial_satisfaction_penalty_house_flooded_fixed</code>.
     */
    public Integer getFluvialSatisfactionPenaltyHouseFloodedFixed() {
        return (Integer) get(9);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.pluvial_satisfaction_penalty_per_damage_point</code>.
     */
    public void setPluvialSatisfactionPenaltyPerDamagePoint(Integer value) {
        set(10, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.pluvial_satisfaction_penalty_per_damage_point</code>.
     */
    public Integer getPluvialSatisfactionPenaltyPerDamagePoint() {
        return (Integer) get(10);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.fluvial_satisfaction_penalty_per_damage_point</code>.
     */
    public void setFluvialSatisfactionPenaltyPerDamagePoint(Integer value) {
        set(11, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.fluvial_satisfaction_penalty_per_damage_point</code>.
     */
    public Integer getFluvialSatisfactionPenaltyPerDamagePoint() {
        return (Integer) get(11);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.satisfaction_debt_penalty</code>.
     */
    public void setSatisfactionDebtPenalty(Integer value) {
        set(12, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.satisfaction_debt_penalty</code>.
     */
    public Integer getSatisfactionDebtPenalty() {
        return (Integer) get(12);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.satisfaction_house_rating_too_low_fixed</code>.
     */
    public void setSatisfactionHouseRatingTooLowFixed(Integer value) {
        set(13, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.satisfaction_house_rating_too_low_fixed</code>.
     */
    public Integer getSatisfactionHouseRatingTooLowFixed() {
        return (Integer) get(13);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.satisfaction_house_rating_too_low_per_delta</code>.
     */
    public void setSatisfactionHouseRatingTooLowPerDelta(Integer value) {
        set(14, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.satisfaction_house_rating_too_low_per_delta</code>.
     */
    public Integer getSatisfactionHouseRatingTooLowPerDelta() {
        return (Integer) get(14);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.satisfaction_house_rating_per_round</code>.
     */
    public void setSatisfactionHouseRatingPerRound(Byte value) {
        set(15, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.satisfaction_house_rating_per_round</code>.
     */
    public Byte getSatisfactionHouseRatingPerRound() {
        return (Byte) get(15);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.satisfaction_move_penalty</code>.
     */
    public void setSatisfactionMovePenalty(Integer value) {
        set(16, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.satisfaction_move_penalty</code>.
     */
    public Integer getSatisfactionMovePenalty() {
        return (Integer) get(16);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.mortgage_percentage</code>.
     */
    public void setMortgagePercentage(Double value) {
        set(17, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.mortgage_percentage</code>.
     */
    public Double getMortgagePercentage() {
        return (Double) get(17);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.allow_personal_satisfaction_neg</code>.
     */
    public void setAllowPersonalSatisfactionNeg(Byte value) {
        set(18, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.allow_personal_satisfaction_neg</code>.
     */
    public Byte getAllowPersonalSatisfactionNeg() {
        return (Byte) get(18);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.allow_house_satisfaction_neg</code>.
     */
    public void setAllowHouseSatisfactionNeg(Byte value) {
        set(19, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.allow_house_satisfaction_neg</code>.
     */
    public Byte getAllowHouseSatisfactionNeg() {
        return (Byte) get(19);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.allow_total_satisfaction_neg</code>.
     */
    public void setAllowTotalSatisfactionNeg(Byte value) {
        set(20, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.allow_total_satisfaction_neg</code>.
     */
    public Byte getAllowTotalSatisfactionNeg() {
        return (Byte) get(20);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.highest_pluvial_score</code>.
     */
    public void setHighestPluvialScore(Integer value) {
        set(21, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.highest_pluvial_score</code>.
     */
    public Integer getHighestPluvialScore() {
        return (Integer) get(21);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.highest_fluvial_score</code>.
     */
    public void setHighestFluvialScore(Integer value) {
        set(22, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.highest_fluvial_score</code>.
     */
    public Integer getHighestFluvialScore() {
        return (Integer) get(22);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.news_discount_in_euros</code>.
     */
    public void setNewsDiscountInEuros(Byte value) {
        set(23, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.news_discount_in_euros</code>.
     */
    public Byte getNewsDiscountInEuros() {
        return (Byte) get(23);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.default_language_id</code>.
     */
    public void setDefaultLanguageId(Integer value) {
        set(24, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.default_language_id</code>.
     */
    public Integer getDefaultLanguageId() {
        return (Integer) get(24);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ScenarioparametersRecord
     */
    public ScenarioparametersRecord() {
        super(Scenarioparameters.SCENARIOPARAMETERS);
    }

    /**
     * Create a detached, initialised ScenarioparametersRecord
     */
    public ScenarioparametersRecord(Integer id, String name, Integer pluvialRepairCostsPerDamagePoint, Integer fluvialRepairCostsPerDamagePoint, Integer pluvialSatisfactionPenaltyIfAreaFlooded, Integer pluvialRepairCostsFixed, Integer fluvialRepairCostsFixed, Integer fluvialSatisfactionPenaltyIfAreaFlooded, Integer pluvialSatisfactionPenaltyHouseFloodedFixed, Integer fluvialSatisfactionPenaltyHouseFloodedFixed, Integer pluvialSatisfactionPenaltyPerDamagePoint, Integer fluvialSatisfactionPenaltyPerDamagePoint, Integer satisfactionDebtPenalty, Integer satisfactionHouseRatingTooLowFixed, Integer satisfactionHouseRatingTooLowPerDelta, Byte satisfactionHouseRatingPerRound, Integer satisfactionMovePenalty, Double mortgagePercentage, Byte allowPersonalSatisfactionNeg, Byte allowHouseSatisfactionNeg, Byte allowTotalSatisfactionNeg, Integer highestPluvialScore, Integer highestFluvialScore, Byte newsDiscountInEuros, Integer defaultLanguageId) {
        super(Scenarioparameters.SCENARIOPARAMETERS);

        setId(id);
        setName(name);
        setPluvialRepairCostsPerDamagePoint(pluvialRepairCostsPerDamagePoint);
        setFluvialRepairCostsPerDamagePoint(fluvialRepairCostsPerDamagePoint);
        setPluvialSatisfactionPenaltyIfAreaFlooded(pluvialSatisfactionPenaltyIfAreaFlooded);
        setPluvialRepairCostsFixed(pluvialRepairCostsFixed);
        setFluvialRepairCostsFixed(fluvialRepairCostsFixed);
        setFluvialSatisfactionPenaltyIfAreaFlooded(fluvialSatisfactionPenaltyIfAreaFlooded);
        setPluvialSatisfactionPenaltyHouseFloodedFixed(pluvialSatisfactionPenaltyHouseFloodedFixed);
        setFluvialSatisfactionPenaltyHouseFloodedFixed(fluvialSatisfactionPenaltyHouseFloodedFixed);
        setPluvialSatisfactionPenaltyPerDamagePoint(pluvialSatisfactionPenaltyPerDamagePoint);
        setFluvialSatisfactionPenaltyPerDamagePoint(fluvialSatisfactionPenaltyPerDamagePoint);
        setSatisfactionDebtPenalty(satisfactionDebtPenalty);
        setSatisfactionHouseRatingTooLowFixed(satisfactionHouseRatingTooLowFixed);
        setSatisfactionHouseRatingTooLowPerDelta(satisfactionHouseRatingTooLowPerDelta);
        setSatisfactionHouseRatingPerRound(satisfactionHouseRatingPerRound);
        setSatisfactionMovePenalty(satisfactionMovePenalty);
        setMortgagePercentage(mortgagePercentage);
        setAllowPersonalSatisfactionNeg(allowPersonalSatisfactionNeg);
        setAllowHouseSatisfactionNeg(allowHouseSatisfactionNeg);
        setAllowTotalSatisfactionNeg(allowTotalSatisfactionNeg);
        setHighestPluvialScore(highestPluvialScore);
        setHighestFluvialScore(highestFluvialScore);
        setNewsDiscountInEuros(newsDiscountInEuros);
        setDefaultLanguageId(defaultLanguageId);
        resetChangedOnNotNull();
    }
}
