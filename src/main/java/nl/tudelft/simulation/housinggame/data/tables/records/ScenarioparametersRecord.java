/*
 * This file is generated by jOOQ.
 */
package nl.tudelft.simulation.housinggame.data.tables.records;


import nl.tudelft.simulation.housinggame.data.tables.Scenarioparameters;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record18;
import org.jooq.Row18;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScenarioparametersRecord extends UpdatableRecordImpl<ScenarioparametersRecord> implements Record18<Integer, String, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Double, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>housinggame.scenarioparameters.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>housinggame.scenarioparameters.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>housinggame.scenarioparameters.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>housinggame.scenarioparameters.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.pluvial_repair_costs_per_damage_point</code>.
     */
    public void setPluvialRepairCostsPerDamagePoint(Integer value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.pluvial_repair_costs_per_damage_point</code>.
     */
    public Integer getPluvialRepairCostsPerDamagePoint() {
        return (Integer) get(2);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.fluvial_repair_costs_per_damage_point</code>.
     */
    public void setFluvialRepairCostsPerDamagePoint(Integer value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.fluvial_repair_costs_per_damage_point</code>.
     */
    public Integer getFluvialRepairCostsPerDamagePoint() {
        return (Integer) get(3);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.pluvial_satisfaction_penalty_if_area_flooded</code>.
     */
    public void setPluvialSatisfactionPenaltyIfAreaFlooded(Integer value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.pluvial_satisfaction_penalty_if_area_flooded</code>.
     */
    public Integer getPluvialSatisfactionPenaltyIfAreaFlooded() {
        return (Integer) get(4);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.pluvial_repair_costs_fixed</code>.
     */
    public void setPluvialRepairCostsFixed(Integer value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.pluvial_repair_costs_fixed</code>.
     */
    public Integer getPluvialRepairCostsFixed() {
        return (Integer) get(5);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.fluvial_repair_costs_fixed</code>.
     */
    public void setFluvialRepairCostsFixed(Integer value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.fluvial_repair_costs_fixed</code>.
     */
    public Integer getFluvialRepairCostsFixed() {
        return (Integer) get(6);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.fluvial_satisfaction_penalty_if_area_flooded</code>.
     */
    public void setFluvialSatisfactionPenaltyIfAreaFlooded(Integer value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.fluvial_satisfaction_penalty_if_area_flooded</code>.
     */
    public Integer getFluvialSatisfactionPenaltyIfAreaFlooded() {
        return (Integer) get(7);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.pluvial_satisfaction_penalty_house_flooded_fixed</code>.
     */
    public void setPluvialSatisfactionPenaltyHouseFloodedFixed(Integer value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.pluvial_satisfaction_penalty_house_flooded_fixed</code>.
     */
    public Integer getPluvialSatisfactionPenaltyHouseFloodedFixed() {
        return (Integer) get(8);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.fluvial_satisfaction_penalty_house_flooded_fixed</code>.
     */
    public void setFluvialSatisfactionPenaltyHouseFloodedFixed(Integer value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.fluvial_satisfaction_penalty_house_flooded_fixed</code>.
     */
    public Integer getFluvialSatisfactionPenaltyHouseFloodedFixed() {
        return (Integer) get(9);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.pluvial_satisfaction_penalty_per_damage_point</code>.
     */
    public void setPluvialSatisfactionPenaltyPerDamagePoint(Integer value) {
        set(10, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.pluvial_satisfaction_penalty_per_damage_point</code>.
     */
    public Integer getPluvialSatisfactionPenaltyPerDamagePoint() {
        return (Integer) get(10);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.fluvial_satisfaction_penalty_per_damage_point</code>.
     */
    public void setFluvialSatisfactionPenaltyPerDamagePoint(Integer value) {
        set(11, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.fluvial_satisfaction_penalty_per_damage_point</code>.
     */
    public Integer getFluvialSatisfactionPenaltyPerDamagePoint() {
        return (Integer) get(11);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.satisfaction_debt_penalty</code>.
     */
    public void setSatisfactionDebtPenalty(Integer value) {
        set(12, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.satisfaction_debt_penalty</code>.
     */
    public Integer getSatisfactionDebtPenalty() {
        return (Integer) get(12);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.satisfaction_house_rating_too_low_fixed</code>.
     */
    public void setSatisfactionHouseRatingTooLowFixed(Integer value) {
        set(13, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.satisfaction_house_rating_too_low_fixed</code>.
     */
    public Integer getSatisfactionHouseRatingTooLowFixed() {
        return (Integer) get(13);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.satisfaction_house_rating_too_low_per_delta</code>.
     */
    public void setSatisfactionHouseRatingTooLowPerDelta(Integer value) {
        set(14, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.satisfaction_house_rating_too_low_per_delta</code>.
     */
    public Integer getSatisfactionHouseRatingTooLowPerDelta() {
        return (Integer) get(14);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.satisfaction_move_penalty</code>.
     */
    public void setSatisfactionMovePenalty(Integer value) {
        set(15, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.satisfaction_move_penalty</code>.
     */
    public Integer getSatisfactionMovePenalty() {
        return (Integer) get(15);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.mortgage_percentage</code>.
     */
    public void setMortgagePercentage(Double value) {
        set(16, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.mortgage_percentage</code>.
     */
    public Double getMortgagePercentage() {
        return (Double) get(16);
    }

    /**
     * Setter for
     * <code>housinggame.scenarioparameters.default_language_id</code>.
     */
    public void setDefaultLanguageId(Integer value) {
        set(17, value);
    }

    /**
     * Getter for
     * <code>housinggame.scenarioparameters.default_language_id</code>.
     */
    public Integer getDefaultLanguageId() {
        return (Integer) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record18 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row18<Integer, String, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Double, Integer> fieldsRow() {
        return (Row18) super.fieldsRow();
    }

    @Override
    public Row18<Integer, String, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Double, Integer> valuesRow() {
        return (Row18) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Scenarioparameters.SCENARIOPARAMETERS.ID;
    }

    @Override
    public Field<String> field2() {
        return Scenarioparameters.SCENARIOPARAMETERS.NAME;
    }

    @Override
    public Field<Integer> field3() {
        return Scenarioparameters.SCENARIOPARAMETERS.PLUVIAL_REPAIR_COSTS_PER_DAMAGE_POINT;
    }

    @Override
    public Field<Integer> field4() {
        return Scenarioparameters.SCENARIOPARAMETERS.FLUVIAL_REPAIR_COSTS_PER_DAMAGE_POINT;
    }

    @Override
    public Field<Integer> field5() {
        return Scenarioparameters.SCENARIOPARAMETERS.PLUVIAL_SATISFACTION_PENALTY_IF_AREA_FLOODED;
    }

    @Override
    public Field<Integer> field6() {
        return Scenarioparameters.SCENARIOPARAMETERS.PLUVIAL_REPAIR_COSTS_FIXED;
    }

    @Override
    public Field<Integer> field7() {
        return Scenarioparameters.SCENARIOPARAMETERS.FLUVIAL_REPAIR_COSTS_FIXED;
    }

    @Override
    public Field<Integer> field8() {
        return Scenarioparameters.SCENARIOPARAMETERS.FLUVIAL_SATISFACTION_PENALTY_IF_AREA_FLOODED;
    }

    @Override
    public Field<Integer> field9() {
        return Scenarioparameters.SCENARIOPARAMETERS.PLUVIAL_SATISFACTION_PENALTY_HOUSE_FLOODED_FIXED;
    }

    @Override
    public Field<Integer> field10() {
        return Scenarioparameters.SCENARIOPARAMETERS.FLUVIAL_SATISFACTION_PENALTY_HOUSE_FLOODED_FIXED;
    }

    @Override
    public Field<Integer> field11() {
        return Scenarioparameters.SCENARIOPARAMETERS.PLUVIAL_SATISFACTION_PENALTY_PER_DAMAGE_POINT;
    }

    @Override
    public Field<Integer> field12() {
        return Scenarioparameters.SCENARIOPARAMETERS.FLUVIAL_SATISFACTION_PENALTY_PER_DAMAGE_POINT;
    }

    @Override
    public Field<Integer> field13() {
        return Scenarioparameters.SCENARIOPARAMETERS.SATISFACTION_DEBT_PENALTY;
    }

    @Override
    public Field<Integer> field14() {
        return Scenarioparameters.SCENARIOPARAMETERS.SATISFACTION_HOUSE_RATING_TOO_LOW_FIXED;
    }

    @Override
    public Field<Integer> field15() {
        return Scenarioparameters.SCENARIOPARAMETERS.SATISFACTION_HOUSE_RATING_TOO_LOW_PER_DELTA;
    }

    @Override
    public Field<Integer> field16() {
        return Scenarioparameters.SCENARIOPARAMETERS.SATISFACTION_MOVE_PENALTY;
    }

    @Override
    public Field<Double> field17() {
        return Scenarioparameters.SCENARIOPARAMETERS.MORTGAGE_PERCENTAGE;
    }

    @Override
    public Field<Integer> field18() {
        return Scenarioparameters.SCENARIOPARAMETERS.DEFAULT_LANGUAGE_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer component3() {
        return getPluvialRepairCostsPerDamagePoint();
    }

    @Override
    public Integer component4() {
        return getFluvialRepairCostsPerDamagePoint();
    }

    @Override
    public Integer component5() {
        return getPluvialSatisfactionPenaltyIfAreaFlooded();
    }

    @Override
    public Integer component6() {
        return getPluvialRepairCostsFixed();
    }

    @Override
    public Integer component7() {
        return getFluvialRepairCostsFixed();
    }

    @Override
    public Integer component8() {
        return getFluvialSatisfactionPenaltyIfAreaFlooded();
    }

    @Override
    public Integer component9() {
        return getPluvialSatisfactionPenaltyHouseFloodedFixed();
    }

    @Override
    public Integer component10() {
        return getFluvialSatisfactionPenaltyHouseFloodedFixed();
    }

    @Override
    public Integer component11() {
        return getPluvialSatisfactionPenaltyPerDamagePoint();
    }

    @Override
    public Integer component12() {
        return getFluvialSatisfactionPenaltyPerDamagePoint();
    }

    @Override
    public Integer component13() {
        return getSatisfactionDebtPenalty();
    }

    @Override
    public Integer component14() {
        return getSatisfactionHouseRatingTooLowFixed();
    }

    @Override
    public Integer component15() {
        return getSatisfactionHouseRatingTooLowPerDelta();
    }

    @Override
    public Integer component16() {
        return getSatisfactionMovePenalty();
    }

    @Override
    public Double component17() {
        return getMortgagePercentage();
    }

    @Override
    public Integer component18() {
        return getDefaultLanguageId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Integer value3() {
        return getPluvialRepairCostsPerDamagePoint();
    }

    @Override
    public Integer value4() {
        return getFluvialRepairCostsPerDamagePoint();
    }

    @Override
    public Integer value5() {
        return getPluvialSatisfactionPenaltyIfAreaFlooded();
    }

    @Override
    public Integer value6() {
        return getPluvialRepairCostsFixed();
    }

    @Override
    public Integer value7() {
        return getFluvialRepairCostsFixed();
    }

    @Override
    public Integer value8() {
        return getFluvialSatisfactionPenaltyIfAreaFlooded();
    }

    @Override
    public Integer value9() {
        return getPluvialSatisfactionPenaltyHouseFloodedFixed();
    }

    @Override
    public Integer value10() {
        return getFluvialSatisfactionPenaltyHouseFloodedFixed();
    }

    @Override
    public Integer value11() {
        return getPluvialSatisfactionPenaltyPerDamagePoint();
    }

    @Override
    public Integer value12() {
        return getFluvialSatisfactionPenaltyPerDamagePoint();
    }

    @Override
    public Integer value13() {
        return getSatisfactionDebtPenalty();
    }

    @Override
    public Integer value14() {
        return getSatisfactionHouseRatingTooLowFixed();
    }

    @Override
    public Integer value15() {
        return getSatisfactionHouseRatingTooLowPerDelta();
    }

    @Override
    public Integer value16() {
        return getSatisfactionMovePenalty();
    }

    @Override
    public Double value17() {
        return getMortgagePercentage();
    }

    @Override
    public Integer value18() {
        return getDefaultLanguageId();
    }

    @Override
    public ScenarioparametersRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ScenarioparametersRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public ScenarioparametersRecord value3(Integer value) {
        setPluvialRepairCostsPerDamagePoint(value);
        return this;
    }

    @Override
    public ScenarioparametersRecord value4(Integer value) {
        setFluvialRepairCostsPerDamagePoint(value);
        return this;
    }

    @Override
    public ScenarioparametersRecord value5(Integer value) {
        setPluvialSatisfactionPenaltyIfAreaFlooded(value);
        return this;
    }

    @Override
    public ScenarioparametersRecord value6(Integer value) {
        setPluvialRepairCostsFixed(value);
        return this;
    }

    @Override
    public ScenarioparametersRecord value7(Integer value) {
        setFluvialRepairCostsFixed(value);
        return this;
    }

    @Override
    public ScenarioparametersRecord value8(Integer value) {
        setFluvialSatisfactionPenaltyIfAreaFlooded(value);
        return this;
    }

    @Override
    public ScenarioparametersRecord value9(Integer value) {
        setPluvialSatisfactionPenaltyHouseFloodedFixed(value);
        return this;
    }

    @Override
    public ScenarioparametersRecord value10(Integer value) {
        setFluvialSatisfactionPenaltyHouseFloodedFixed(value);
        return this;
    }

    @Override
    public ScenarioparametersRecord value11(Integer value) {
        setPluvialSatisfactionPenaltyPerDamagePoint(value);
        return this;
    }

    @Override
    public ScenarioparametersRecord value12(Integer value) {
        setFluvialSatisfactionPenaltyPerDamagePoint(value);
        return this;
    }

    @Override
    public ScenarioparametersRecord value13(Integer value) {
        setSatisfactionDebtPenalty(value);
        return this;
    }

    @Override
    public ScenarioparametersRecord value14(Integer value) {
        setSatisfactionHouseRatingTooLowFixed(value);
        return this;
    }

    @Override
    public ScenarioparametersRecord value15(Integer value) {
        setSatisfactionHouseRatingTooLowPerDelta(value);
        return this;
    }

    @Override
    public ScenarioparametersRecord value16(Integer value) {
        setSatisfactionMovePenalty(value);
        return this;
    }

    @Override
    public ScenarioparametersRecord value17(Double value) {
        setMortgagePercentage(value);
        return this;
    }

    @Override
    public ScenarioparametersRecord value18(Integer value) {
        setDefaultLanguageId(value);
        return this;
    }

    @Override
    public ScenarioparametersRecord values(Integer value1, String value2, Integer value3, Integer value4, Integer value5, Integer value6, Integer value7, Integer value8, Integer value9, Integer value10, Integer value11, Integer value12, Integer value13, Integer value14, Integer value15, Integer value16, Double value17, Integer value18) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ScenarioparametersRecord
     */
    public ScenarioparametersRecord() {
        super(Scenarioparameters.SCENARIOPARAMETERS);
    }

    /**
     * Create a detached, initialised ScenarioparametersRecord
     */
    public ScenarioparametersRecord(Integer id, String name, Integer pluvialRepairCostsPerDamagePoint, Integer fluvialRepairCostsPerDamagePoint, Integer pluvialSatisfactionPenaltyIfAreaFlooded, Integer pluvialRepairCostsFixed, Integer fluvialRepairCostsFixed, Integer fluvialSatisfactionPenaltyIfAreaFlooded, Integer pluvialSatisfactionPenaltyHouseFloodedFixed, Integer fluvialSatisfactionPenaltyHouseFloodedFixed, Integer pluvialSatisfactionPenaltyPerDamagePoint, Integer fluvialSatisfactionPenaltyPerDamagePoint, Integer satisfactionDebtPenalty, Integer satisfactionHouseRatingTooLowFixed, Integer satisfactionHouseRatingTooLowPerDelta, Integer satisfactionMovePenalty, Double mortgagePercentage, Integer defaultLanguageId) {
        super(Scenarioparameters.SCENARIOPARAMETERS);

        setId(id);
        setName(name);
        setPluvialRepairCostsPerDamagePoint(pluvialRepairCostsPerDamagePoint);
        setFluvialRepairCostsPerDamagePoint(fluvialRepairCostsPerDamagePoint);
        setPluvialSatisfactionPenaltyIfAreaFlooded(pluvialSatisfactionPenaltyIfAreaFlooded);
        setPluvialRepairCostsFixed(pluvialRepairCostsFixed);
        setFluvialRepairCostsFixed(fluvialRepairCostsFixed);
        setFluvialSatisfactionPenaltyIfAreaFlooded(fluvialSatisfactionPenaltyIfAreaFlooded);
        setPluvialSatisfactionPenaltyHouseFloodedFixed(pluvialSatisfactionPenaltyHouseFloodedFixed);
        setFluvialSatisfactionPenaltyHouseFloodedFixed(fluvialSatisfactionPenaltyHouseFloodedFixed);
        setPluvialSatisfactionPenaltyPerDamagePoint(pluvialSatisfactionPenaltyPerDamagePoint);
        setFluvialSatisfactionPenaltyPerDamagePoint(fluvialSatisfactionPenaltyPerDamagePoint);
        setSatisfactionDebtPenalty(satisfactionDebtPenalty);
        setSatisfactionHouseRatingTooLowFixed(satisfactionHouseRatingTooLowFixed);
        setSatisfactionHouseRatingTooLowPerDelta(satisfactionHouseRatingTooLowPerDelta);
        setSatisfactionMovePenalty(satisfactionMovePenalty);
        setMortgagePercentage(mortgagePercentage);
        setDefaultLanguageId(defaultLanguageId);
        resetChangedOnNotNull();
    }
}
