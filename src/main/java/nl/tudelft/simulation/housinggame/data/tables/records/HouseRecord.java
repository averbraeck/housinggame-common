/*
 * This file is generated by jOOQ.
 */
package nl.tudelft.simulation.housinggame.data.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;

import nl.tudelft.simulation.housinggame.data.tables.House;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HouseRecord extends UpdatableRecordImpl<HouseRecord> implements Record9<Integer, Integer, String, Integer, String, Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>housinggame.house.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>housinggame.house.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>housinggame.house.price</code>.
     */
    public void setPrice(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>housinggame.house.price</code>.
     */
    public Integer getPrice() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>housinggame.house.code</code>.
     */
    public void setCode(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>housinggame.house.code</code>.
     */
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>housinggame.house.available_round</code>.
     */
    public void setAvailableRound(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>housinggame.house.available_round</code>.
     */
    public Integer getAvailableRound() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>housinggame.house.address</code>.
     */
    public void setAddress(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>housinggame.house.address</code>.
     */
    public String getAddress() {
        return (String) get(4);
    }

    /**
     * Setter for <code>housinggame.house.rating</code>.
     */
    public void setRating(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>housinggame.house.rating</code>.
     */
    public Integer getRating() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>housinggame.house.initial_pluvial_protection</code>.
     */
    public void setInitialPluvialProtection(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>housinggame.house.initial_pluvial_protection</code>.
     */
    public Integer getInitialPluvialProtection() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>housinggame.house.initial_fluvial_protection</code>.
     */
    public void setInitialFluvialProtection(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>housinggame.house.initial_fluvial_protection</code>.
     */
    public Integer getInitialFluvialProtection() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>housinggame.house.community_id</code>.
     */
    public void setCommunityId(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>housinggame.house.community_id</code>.
     */
    public Integer getCommunityId() {
        return (Integer) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, Integer, String, Integer, String, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, Integer, String, Integer, String, Integer, Integer, Integer, Integer> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return House.HOUSE.ID;
    }

    @Override
    public Field<Integer> field2() {
        return House.HOUSE.PRICE;
    }

    @Override
    public Field<String> field3() {
        return House.HOUSE.CODE;
    }

    @Override
    public Field<Integer> field4() {
        return House.HOUSE.AVAILABLE_ROUND;
    }

    @Override
    public Field<String> field5() {
        return House.HOUSE.ADDRESS;
    }

    @Override
    public Field<Integer> field6() {
        return House.HOUSE.RATING;
    }

    @Override
    public Field<Integer> field7() {
        return House.HOUSE.INITIAL_PLUVIAL_PROTECTION;
    }

    @Override
    public Field<Integer> field8() {
        return House.HOUSE.INITIAL_FLUVIAL_PROTECTION;
    }

    @Override
    public Field<Integer> field9() {
        return House.HOUSE.COMMUNITY_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getPrice();
    }

    @Override
    public String component3() {
        return getCode();
    }

    @Override
    public Integer component4() {
        return getAvailableRound();
    }

    @Override
    public String component5() {
        return getAddress();
    }

    @Override
    public Integer component6() {
        return getRating();
    }

    @Override
    public Integer component7() {
        return getInitialPluvialProtection();
    }

    @Override
    public Integer component8() {
        return getInitialFluvialProtection();
    }

    @Override
    public Integer component9() {
        return getCommunityId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getPrice();
    }

    @Override
    public String value3() {
        return getCode();
    }

    @Override
    public Integer value4() {
        return getAvailableRound();
    }

    @Override
    public String value5() {
        return getAddress();
    }

    @Override
    public Integer value6() {
        return getRating();
    }

    @Override
    public Integer value7() {
        return getInitialPluvialProtection();
    }

    @Override
    public Integer value8() {
        return getInitialFluvialProtection();
    }

    @Override
    public Integer value9() {
        return getCommunityId();
    }

    @Override
    public HouseRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public HouseRecord value2(Integer value) {
        setPrice(value);
        return this;
    }

    @Override
    public HouseRecord value3(String value) {
        setCode(value);
        return this;
    }

    @Override
    public HouseRecord value4(Integer value) {
        setAvailableRound(value);
        return this;
    }

    @Override
    public HouseRecord value5(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public HouseRecord value6(Integer value) {
        setRating(value);
        return this;
    }

    @Override
    public HouseRecord value7(Integer value) {
        setInitialPluvialProtection(value);
        return this;
    }

    @Override
    public HouseRecord value8(Integer value) {
        setInitialFluvialProtection(value);
        return this;
    }

    @Override
    public HouseRecord value9(Integer value) {
        setCommunityId(value);
        return this;
    }

    @Override
    public HouseRecord values(Integer value1, Integer value2, String value3, Integer value4, String value5, Integer value6, Integer value7, Integer value8, Integer value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HouseRecord
     */
    public HouseRecord() {
        super(House.HOUSE);
    }

    /**
     * Create a detached, initialised HouseRecord
     */
    public HouseRecord(Integer id, Integer price, String code, Integer availableRound, String address, Integer rating, Integer initialPluvialProtection, Integer initialFluvialProtection, Integer communityId) {
        super(House.HOUSE);

        setId(id);
        setPrice(price);
        setCode(code);
        setAvailableRound(availableRound);
        setAddress(address);
        setRating(rating);
        setInitialPluvialProtection(initialPluvialProtection);
        setInitialFluvialProtection(initialFluvialProtection);
        setCommunityId(communityId);
        resetChangedOnNotNull();
    }
}
